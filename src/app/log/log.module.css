.main {
  display: flex;
  max-width: 1440px;
  padding-left: 1rem;
  padding-right: 1rem;
  gap: 2rem;
}

.logcontainer {
  display: flex;
  overflow-y: scroll;
  scrollbar-gutter: stable both-edges;
  flex-direction: column;
  max-height: 80vh;
  max-width: 300px;
  gap: 1rem;
  padding: 1.5rem;
  border-width: 1px;
  border-radius: 0.5rem;
  cursor: pointer;
  position: relative;
}

.logcontainer::-webkit-scrollbar {
  display: none;
}

.travelcard_content {
  line-height: 35px;
  padding: 1.5rem;
}

.travelcard_image {
  min-width: 200px;
  overflow: hidden;
}

.travelcontainer {
  width: 100%;
  padding: 2px;

}
.travelcard:hover{
    position: relative;
    cursor: pointer;
    border: 2px solid red;
    
}
.travelcard{
    position: relative;
    cursor: pointer;
    border: 2px solid #333;
    
}

/* Timeline Container */
.timelinecontainer {
  /* background-color: blue; */
  overflow: hidden;
  overflow-y: auto;
  max-height: 80vh;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  /* flex: 1; */
}

.timeline {
  gap: 1rem;
  padding: 1.5rem;
}

/* Card container */
.card {
  position: relative;
  max-width: 400px;
}

/* setting padding based on even or odd */
.card:nth-child(odd) {
  padding: 30px 0 30px 30px;
}

.card:nth-child(even) {
  padding: 30px 30px 30px 0;
}

/* Global ::before */
.card::before {
  content: "";
  position: absolute;
  width: 50%;
  border: solid orangered;
}

/* Setting the border of top, bottom, left */
.card:nth-child(odd)::before {
  left: 0px;
  top: -4.5px;
  bottom: -4.5px;
  border-width: 5px 0 5px 5px;
  border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.card:nth-child(even)::before {
  right: 0;
  top: 0;
  bottom: 0;
  border-width: 5px 5px 5px 0;
  border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.card:first-child::before {
  border-top: 0;
  border-top-left-radius: 0;
}

/* Removing the border if it is the last card  and it's odd */
.card:last-child:nth-child(odd)::before {
  border-bottom: 0;
  border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.card:last-child:nth-child(even)::before {
  border-bottom: 0;
  border-bottom-right-radius: 0;
}

/* Information about the timeline */
.info {
  display: flex;
  flex-direction: column;
  background: #333;
  color: gray;
  border-radius: 10px;
  padding: 10px;
}

/* Title of the card */
.title {
  color: orangered;
  position: relative;
}

/* Timeline dot  */
.title::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 999px;
  border: 3px solid orangered;
}

/* text right if the card is even  */
.card:nth-child(even) > .info > .title {
  text-align: right;
}

/* setting dot to the left if the card is odd */
.card:nth-child(odd) > .info > .title::before {
  left: -45px;
}

/* setting dot to the right if the card is odd */
.card:nth-child(even) > .info > .title::before {
  right: -45px;
}

@media (max-width: 1024px) {
  .timelinecontainer {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
}

@media (max-width: 739px) {
  .logcontainer {
    display: grid;
    grid-template-columns:repeat(1, minmax(0, 1fr)); ;
    padding: auto;
    margin: auto;
  }

  .timelinecontainer {
    display: none;
  }
}
